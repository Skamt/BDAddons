{
	"SwitchRow" :"getModule(m => m.toString().includes('helpdeskArticleId'))",
	"ImageModal" :"getModule(m => m?.prototype?.render?.toString().includes('OPEN_ORIGINAL_IMAGE'))",
	"SelectedChannelStore": "getModule(Filters.byProps('getLastSelectedChannelId'))",
	"UserStore": "getModule(Filters.byProps('getCurrentUser', 'getUser'))",
	"Permissions": "getModule(Filters.byProps('computePermissions'))",
	"DiscordPermissions": "getModule(Filters.byProps('ADD_REACTIONS'), { searchExports: true })",
	"MessageActions": "getModule(Filters.byProps('jumpToMessage', '_sendMessage'))",
	"EmojiIntentionEnum": "getModule(Filters.byProps('GUILD_ROLE_BENEFIT_EMOJI'), { searchExports: true })",
	"EmojiSendAvailabilityEnum": "getModule(Filters.byProps('GUILD_SUBSCRIPTION_UNAVAILABLE'), { searchExports: true })",
	"EmojiFunctions": "getModule(Filters.byProps('getEmojiUnavailableReason'), { searchExports: true })",
	"ChannelStore": "getModule(Filters.byProps('getChannel', 'getDMFromUserId'))",
	"StickerStore": "getModule(Filters.byProps('getStickerById'))",
	"ChannelTextArea": "getModule((exp) => exp?.type?.render?.toString().includes('CHANNEL_TEXT_AREA'))",
	"StickerTypeEnum": "getModule(Filters.byProps('GUILD', 'STANDARD'), { searchExports: true })",
	"StickerFormatEnum": "getModule(Filters.byProps('APNG', 'LOTTIE'), { searchExports: true })",
	"GuildPermissions": "getModule(Filters.byProps('getGuildPermissions'), { searchExports: true })",
	"Popout": "getModule(Filters.byStrings('renderPopout', 'animationPosition'), { searchExports: true })",
	"ExpressionPickerInspector": "getModule((m) => m.Z && m.Z.toString().includes('EMOJI_IS_FAVORITE_ARIA_LABEL'))",
	"Tooltip": "getModule(m => m.defaultProps?.shouldShow)",
	"ModalRoot": "getModule(Filters.byStrings('onAnimationEnd'), { searchExports: true })",
	"openModal": "getModule(Filters.byStrings('onCloseCallback', 'Layer'), { searchExports: true })",
	"ModalCarousel": "getModule(m => m.prototype?.navigateTo && m.prototype?.preloadImage)",
	"UserBannerMask": "getModule((m) => m.Z && m.Z.toString().includes('overrideAvatarDecorationURL'))",
	"ProfileTypeEnum": "getModule(Filters.byProps('POPOUT'), { searchExports: true })",
	"CurrentUserStore": "getModule(Filters.byProps('getCurrentUser', 'getUsers'))",
	"SelectedGuildStore": "getModule(Filters.byProps('getLastSelectedGuildId'))",
	"ComponentDispatch": "getModule(m => m.dispatchToLastSubscribed && m.emitter.listeners('INSERT_TEXT').length, { searchExports: true })",
	"renderLinkComponent": "getModule(m => m.type?.toString().includes('MASKED_LINK'))"
}
